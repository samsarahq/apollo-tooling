// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSON output should generate JSON output for a mutation with an enum and an input object variable 1`] = `
"{
	"operations": [
		{
			"filePath": "GraphQL request",
			"operationName": "CreateReview",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "episode",
					"type": "Episode"
				},
				{
					"name": "review",
					"type": "ReviewInput"
				}
			],
			"source": "mutation CreateReview($episode: Episode, $review: ReviewInput) {\\n  createReview(episode: $episode, review: $review) {\\n    __typename\\n    stars\\n    commentary\\n  }\\n}",
			"fields": [
				{
					"responseName": "createReview",
					"fieldName": "createReview",
					"type": "Review",
					"args": [
						{
							"name": "episode",
							"value": {
								"kind": "Variable",
								"variableName": "episode"
							}
						},
						{
							"name": "review",
							"value": {
								"kind": "Variable",
								"variableName": "review"
							}
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"deprecationReason": null,
					"hasOperationExclusiveDirectives": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"hasOperationExclusiveDirectives": false
						},
						{
							"responseName": "stars",
							"fieldName": "stars",
							"type": "Int!",
							"isConditional": false,
							"description": "The number of stars this review gave, 1-5",
							"isDeprecated": false,
							"deprecationReason": null,
							"hasOperationExclusiveDirectives": false
						},
						{
							"responseName": "commentary",
							"fieldName": "commentary",
							"type": "String",
							"isConditional": false,
							"description": "Comment about the movie",
							"isDeprecated": false,
							"deprecationReason": null,
							"hasOperationExclusiveDirectives": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation CreateReview($episode: Episode, $review: ReviewInput) {\\n  createReview(episode: $episode, review: $review) {\\n    __typename\\n    stars\\n    commentary\\n  }\\n}",
			"operationId": "0ce790562a5f5a8afc1e0d002d0436768d7649e4ec8b4aa816d3849f66768c7e"
		}
	],
	"fragments": [],
	"typesUsed": [
		{
			"kind": "EnumType",
			"name": "Episode",
			"description": "The episodes in the Star Wars trilogy",
			"values": [
				{
					"name": "NEWHOPE",
					"description": "Star Wars Episode IV: A New Hope, released in 1977.",
					"isDeprecated": false,
					"deprecationReason": null
				},
				{
					"name": "EMPIRE",
					"description": "Star Wars Episode V: The Empire Strikes Back, released in 1980.",
					"isDeprecated": false,
					"deprecationReason": null
				},
				{
					"name": "JEDI",
					"description": "Star Wars Episode VI: Return of the Jedi, released in 1983.",
					"isDeprecated": false,
					"deprecationReason": null
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ReviewInput",
			"description": "The input object sent when someone is creating a new review",
			"fields": [
				{
					"name": "stars",
					"description": "0-5 stars",
					"type": "Int!"
				},
				{
					"name": "commentary",
					"description": "Comment about the movie, optional",
					"type": "String"
				},
				{
					"name": "favorite_color",
					"description": "Favorite color, optional",
					"type": "ColorInput"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ColorInput",
			"description": "The input object sent when passing in a color",
			"fields": [
				{
					"name": "red",
					"description": "",
					"type": "Int!"
				},
				{
					"name": "green",
					"description": "",
					"type": "Int!"
				},
				{
					"name": "blue",
					"description": "",
					"type": "Int!"
				}
			]
		}
	]
}"
`;

exports[`JSON output should generate JSON output for a query with a fragment spread and nested inline fragments 1`] = `
"{
	"operations": [
		{
			"filePath": "GraphQL request",
			"operationName": "HeroAndDetails",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query HeroAndDetails {\\n  hero {\\n    __typename\\n    id\\n    ...CharacterDetails\\n  }\\n}",
			"fields": [
				{
					"responseName": "hero",
					"fieldName": "hero",
					"type": "Character",
					"isConditional": false,
					"isDeprecated": false,
					"deprecationReason": null,
					"hasOperationExclusiveDirectives": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"hasOperationExclusiveDirectives": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "The ID of the character",
							"isDeprecated": false,
							"deprecationReason": null,
							"hasOperationExclusiveDirectives": false
						}
					],
					"fragmentSpreads": [
						"CharacterDetails"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"CharacterDetails"
			],
			"sourceWithFragments": "query HeroAndDetails {\\n  hero {\\n    __typename\\n    id\\n    ...CharacterDetails\\n  }\\n}\\nfragment CharacterDetails on Character {\\n  __typename\\n  name\\n  ... on Droid {\\n    primaryFunction\\n  }\\n  ... on Human {\\n    height\\n  }\\n}",
			"operationId": "9ea2d583a2bcf98ddcedc95a807e34011ff3c0f66fabaf01fa0169e4a4159121"
		}
	],
	"fragments": [
		{
			"typeCondition": "Character",
			"possibleTypes": [
				"Human",
				"Droid"
			],
			"fragmentName": "CharacterDetails",
			"filePath": "GraphQL request",
			"source": "fragment CharacterDetails on Character {\\n  __typename\\n  name\\n  ... on Droid {\\n    primaryFunction\\n  }\\n  ... on Human {\\n    height\\n  }\\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false,
					"hasOperationExclusiveDirectives": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"description": "The name of the character",
					"isDeprecated": false,
					"deprecationReason": null,
					"hasOperationExclusiveDirectives": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "Droid",
					"possibleTypes": [
						"Droid"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"hasOperationExclusiveDirectives": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"description": "What others call this droid",
							"isDeprecated": false,
							"deprecationReason": null,
							"hasOperationExclusiveDirectives": false
						},
						{
							"responseName": "primaryFunction",
							"fieldName": "primaryFunction",
							"type": "String",
							"isConditional": false,
							"description": "This droid's primary function",
							"isDeprecated": false,
							"deprecationReason": null,
							"hasOperationExclusiveDirectives": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "Human",
					"possibleTypes": [
						"Human"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"hasOperationExclusiveDirectives": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"description": "What this human calls themselves",
							"isDeprecated": false,
							"deprecationReason": null,
							"hasOperationExclusiveDirectives": false
						},
						{
							"responseName": "height",
							"fieldName": "height",
							"type": "Float",
							"isConditional": false,
							"description": "Height in the preferred unit, default is meters",
							"isDeprecated": false,
							"deprecationReason": null,
							"hasOperationExclusiveDirectives": false
						}
					],
					"fragmentSpreads": []
				}
			]
		}
	],
	"typesUsed": []
}"
`;

exports[`JSON output should generate JSON output for a query with a nested selection set 1`] = `
"{
	"operations": [
		{
			"filePath": "GraphQL request",
			"operationName": "HeroAndFriendsNames",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query HeroAndFriendsNames {\\n  hero {\\n    __typename\\n    name\\n    friends {\\n      __typename\\n      name\\n    }\\n  }\\n}",
			"fields": [
				{
					"responseName": "hero",
					"fieldName": "hero",
					"type": "Character",
					"isConditional": false,
					"isDeprecated": false,
					"deprecationReason": null,
					"hasOperationExclusiveDirectives": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"hasOperationExclusiveDirectives": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"description": "The name of the character",
							"isDeprecated": false,
							"deprecationReason": null,
							"hasOperationExclusiveDirectives": false
						},
						{
							"responseName": "friends",
							"fieldName": "friends",
							"type": "[Character]",
							"isConditional": false,
							"description": "The friends of the character, or an empty list if they have none",
							"isDeprecated": false,
							"deprecationReason": null,
							"hasOperationExclusiveDirectives": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false,
									"hasOperationExclusiveDirectives": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"description": "The name of the character",
									"isDeprecated": false,
									"deprecationReason": null,
									"hasOperationExclusiveDirectives": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query HeroAndFriendsNames {\\n  hero {\\n    __typename\\n    name\\n    friends {\\n      __typename\\n      name\\n    }\\n  }\\n}",
			"operationId": "d424c7c31d5147b382972b3c316ace3d51f2f039b53852a280d707df2848f715"
		}
	],
	"fragments": [],
	"typesUsed": []
}"
`;

exports[`JSON output should generate JSON output for a query with an enum variable 1`] = `
"{
	"operations": [
		{
			"filePath": "GraphQL request",
			"operationName": "HeroName",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "episode",
					"type": "Episode"
				}
			],
			"source": "query HeroName($episode: Episode) {\\n  hero(episode: $episode) {\\n    __typename\\n    name\\n  }\\n}",
			"fields": [
				{
					"responseName": "hero",
					"fieldName": "hero",
					"type": "Character",
					"args": [
						{
							"name": "episode",
							"value": {
								"kind": "Variable",
								"variableName": "episode"
							}
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"deprecationReason": null,
					"hasOperationExclusiveDirectives": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false,
							"hasOperationExclusiveDirectives": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"description": "The name of the character",
							"isDeprecated": false,
							"deprecationReason": null,
							"hasOperationExclusiveDirectives": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query HeroName($episode: Episode) {\\n  hero(episode: $episode) {\\n    __typename\\n    name\\n  }\\n}",
			"operationId": "f6e76545cd03aa21368d9969cb39447f6e836a16717823281803778e7805d671"
		}
	],
	"fragments": [],
	"typesUsed": [
		{
			"kind": "EnumType",
			"name": "Episode",
			"description": "The episodes in the Star Wars trilogy",
			"values": [
				{
					"name": "NEWHOPE",
					"description": "Star Wars Episode IV: A New Hope, released in 1977.",
					"isDeprecated": false,
					"deprecationReason": null
				},
				{
					"name": "EMPIRE",
					"description": "Star Wars Episode V: The Empire Strikes Back, released in 1980.",
					"isDeprecated": false,
					"deprecationReason": null
				},
				{
					"name": "JEDI",
					"description": "Star Wars Episode VI: Return of the Jedi, released in 1983.",
					"isDeprecated": false,
					"deprecationReason": null
				}
			]
		}
	]
}"
`;
